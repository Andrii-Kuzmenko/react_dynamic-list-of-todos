{"version":3,"sources":["types/СomplitedStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ComplitedStatus","TodoList","todos","handleChoosenTodo","selectedTodoId","className","map","id","completed","title","userId","classNames","type","onClick","TodoFilter","React","memo","setTodosFiltered","useState","query","setQuery","complitedStatus","setComplitedStatus","filter","todo","toLowerCase","includes","ACTIVE","COMPLETED","value","onChange","event","target","ALL","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","useEffect","getUser","catch","error","Error","choosenTodo","find","href","email","name","App","setTodos","todosFiltered","modalUserId","setModalUserId","setSelectedTodoId","isLoad","setIsLoad","loadTodos","a","todosFromServer","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b4b4206.chunk.js","sourcesContent":["export enum ComplitedStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleChoosenTodo: (id: number, userId: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleChoosenTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id,\n          completed,\n          title,\n          userId,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === id,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChoosenTodo(id, userId)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodoId === id,\n                      'fa-eye': selectedTodoId !== id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { ComplitedStatus } from '../../types/СomplitedStatus';\n\ntype Props = {\n  setTodosFiltered: (todos: Todo[]) => void;\n  todos: Todo[];\n};\n\nexport const TodoFilter = React.memo<Props>(\n  ({ setTodosFiltered, todos }) => {\n    const [query, setQuery] = useState('');\n    const [complitedStatus, setComplitedStatus] = useState('all');\n\n    const filtrationTodos = () => {\n      const filteredByTitle = [...todos]\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n      const filteredByComplite = filteredByTitle.filter(todo => {\n        switch (complitedStatus) {\n          case ComplitedStatus.ACTIVE:\n            return !todo.completed;\n          case ComplitedStatus.COMPLETED:\n            return todo.completed;\n          default:\n            return todo;\n        }\n      });\n\n      return filteredByComplite;\n    };\n\n    setTodosFiltered(filtrationTodos());\n\n    const resetForm = () => {\n      setQuery('');\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={complitedStatus}\n              onChange={(event) => setComplitedStatus(event.target.value)}\n            >\n              <option value={ComplitedStatus.ALL}>All</option>\n              <option value={ComplitedStatus.ACTIVE}>Active</option>\n              <option value={ComplitedStatus.COMPLETED}>Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"label\"\n                onClick={resetForm}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number;\n  handleChoosenTodo: (id: number, userId: number) => void;\n  selectedTodoId: number;\n  todos: Todo[];\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  handleChoosenTodo,\n  selectedTodoId,\n  todos,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .catch(error => {\n        throw new Error(`User wasn't found ${error}`);\n      });\n  }, []);\n\n  const choosenTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            <button\n              aria-label=\"label\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleChoosenTodo(0, 0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {choosenTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {choosenTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosFiltered, setTodosFiltered] = useState<Todo[]>(todos);\n  const [modalUserId, setModalUserId] = useState<number>(0);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [isLoad, setIsLoad] = useState<boolean>(false);\n\n  const loadTodos = async () => {\n    setIsLoad(true);\n\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } catch (error) {\n      throw new Error(`There is an ${error}`);\n    } finally {\n      setIsLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleChoosenTodo = (todoId: number, userId: number) => {\n    setModalUserId(userId);\n    setSelectedTodoId(todoId);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setTodosFiltered={setTodosFiltered} todos={todos} />\n            </div>\n\n            {isLoad ? (\n              <Loader />\n            ) : (\n              <div className=\"block\">\n                <TodoList\n                  todos={todosFiltered}\n                  handleChoosenTodo={handleChoosenTodo}\n                  selectedTodoId={selectedTodoId}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {modalUserId && (\n        <TodoModal\n          userId={modalUserId}\n          handleChoosenTodo={handleChoosenTodo}\n          selectedTodoId={selectedTodoId}\n          todos={todosFiltered}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}